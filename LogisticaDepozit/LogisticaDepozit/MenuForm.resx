<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9+cJtwAAAABJRU5ErkJggg==
</value>
  </data>
</root>