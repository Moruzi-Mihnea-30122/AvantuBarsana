<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripBackS.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PZmgvAAAAABJRU5ErkJggg==
</value>
  </data>
</root>